<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="933.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="933.00"> </text><svg id="frames" x="10" width="1180" total_samples="81204"><g><title>AppKit`+[NSApplication sharedApplication] (10 samples, 0.01%)</title><rect x="0.0012%" y="741" width="0.0123%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="10"/><text x="0.2512%" y="751.50"></text></g><g><title>AppKit`-[NSApplication init] (10 samples, 0.01%)</title><rect x="0.0012%" y="725" width="0.0123%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="10"/><text x="0.2512%" y="735.50"></text></g><g><title>cipher-solver-comp3260`eframe::native::run::create_event_loop (13 samples, 0.02%)</title><rect x="0.0012%" y="773" width="0.0160%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="13"/><text x="0.2512%" y="783.50"></text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::event_loop::EventLoop&lt;T&gt;::new (13 samples, 0.02%)</title><rect x="0.0012%" y="757" width="0.0160%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="13"/><text x="0.2512%" y="767.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager _mouseMoved:] (11 samples, 0.01%)</title><rect x="0.0419%" y="629" width="0.0135%" height="15" fill="rgb(208,68,35)" fg:x="34" fg:w="11"/><text x="0.2919%" y="639.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (14 samples, 0.02%)</title><rect x="0.0419%" y="661" width="0.0172%" height="15" fill="rgb(232,128,0)" fg:x="34" fg:w="14"/><text x="0.2919%" y="671.50"></text></g><g><title>AppKit`_routeMouseMovedEvent (14 samples, 0.02%)</title><rect x="0.0419%" y="645" width="0.0172%" height="15" fill="rgb(207,160,47)" fg:x="34" fg:w="14"/><text x="0.2919%" y="655.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) sendEvent:] (34 samples, 0.04%)</title><rect x="0.0197%" y="709" width="0.0419%" height="15" fill="rgb(228,23,34)" fg:x="16" fg:w="34"/><text x="0.2697%" y="719.50"></text></g><g><title>AppKit`routeMouseMovedEvent (18 samples, 0.02%)</title><rect x="0.0394%" y="693" width="0.0222%" height="15" fill="rgb(218,30,26)" fg:x="32" fg:w="18"/><text x="0.2894%" y="703.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (16 samples, 0.02%)</title><rect x="0.0419%" y="677" width="0.0197%" height="15" fill="rgb(220,122,19)" fg:x="34" fg:w="16"/><text x="0.2919%" y="687.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (37 samples, 0.05%)</title><rect x="0.0172%" y="741" width="0.0456%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="37"/><text x="0.2672%" y="751.50"></text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::app::WinitApplication::send_event (35 samples, 0.04%)</title><rect x="0.0197%" y="725" width="0.0431%" height="15" fill="rgb(240,193,28)" fg:x="16" fg:w="35"/><text x="0.2697%" y="735.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (9 samples, 0.01%)</title><rect x="0.0924%" y="261" width="0.0111%" height="15" fill="rgb(216,20,37)" fg:x="75" fg:w="9"/><text x="0.3424%" y="271.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (11 samples, 0.01%)</title><rect x="0.0924%" y="277" width="0.0135%" height="15" fill="rgb(206,188,39)" fg:x="75" fg:w="11"/><text x="0.3424%" y="287.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (14 samples, 0.02%)</title><rect x="0.0911%" y="309" width="0.0172%" height="15" fill="rgb(217,207,13)" fg:x="74" fg:w="14"/><text x="0.3411%" y="319.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (14 samples, 0.02%)</title><rect x="0.0911%" y="293" width="0.0172%" height="15" fill="rgb(231,73,38)" fg:x="74" fg:w="14"/><text x="0.3411%" y="303.50"></text></g><g><title>cipher-solver-comp3260`&lt;eframe::native::glow_integration::GlowWinitApp as eframe::native::winit_integration::WinitApp&gt;::resumed (31 samples, 0.04%)</title><rect x="0.0714%" y="389" width="0.0382%" height="15" fill="rgb(225,20,46)" fg:x="58" fg:w="31"/><text x="0.3214%" y="399.50"></text></g><g><title>cipher-solver-comp3260`glutin_winit::DisplayBuilder::build (24 samples, 0.03%)</title><rect x="0.0800%" y="373" width="0.0296%" height="15" fill="rgb(210,31,41)" fg:x="65" fg:w="24"/><text x="0.3300%" y="383.50"></text></g><g><title>cipher-solver-comp3260`&lt;winit::event_loop::ActiveEventLoop as glutin_winit::event_loop::GlutinEventLoop&gt;::create_window (16 samples, 0.02%)</title><rect x="0.0899%" y="357" width="0.0197%" height="15" fill="rgb(221,200,47)" fg:x="73" fg:w="16"/><text x="0.3399%" y="367.50"></text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::window::Window::new (16 samples, 0.02%)</title><rect x="0.0899%" y="341" width="0.0197%" height="15" fill="rgb(226,26,5)" fg:x="73" fg:w="16"/><text x="0.3399%" y="351.50"></text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::window_delegate::WindowDelegate::new (16 samples, 0.02%)</title><rect x="0.0899%" y="325" width="0.0197%" height="15" fill="rgb(249,33,26)" fg:x="73" fg:w="16"/><text x="0.3399%" y="335.50"></text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::app_state::ApplicationDelegate::dispatch_init_events (32 samples, 0.04%)</title><rect x="0.0714%" y="453" width="0.0394%" height="15" fill="rgb(235,183,28)" fg:x="58" fg:w="32"/><text x="0.3214%" y="463.50"></text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::event_handler::EventHandler::handle_event (32 samples, 0.04%)</title><rect x="0.0714%" y="437" width="0.0394%" height="15" fill="rgb(221,5,38)" fg:x="58" fg:w="32"/><text x="0.3214%" y="447.50"></text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::event_loop::map_user_event::_{{closure}} (32 samples, 0.04%)</title><rect x="0.0714%" y="421" width="0.0394%" height="15" fill="rgb(247,18,42)" fg:x="58" fg:w="32"/><text x="0.3214%" y="431.50"></text></g><g><title>cipher-solver-comp3260`winit::event_loop::EventLoop&lt;T&gt;::run_app::_{{closure}} (32 samples, 0.04%)</title><rect x="0.0714%" y="405" width="0.0394%" height="15" fill="rgb(241,131,45)" fg:x="58" fg:w="32"/><text x="0.3214%" y="415.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (44 samples, 0.05%)</title><rect x="0.0690%" y="709" width="0.0542%" height="15" fill="rgb(249,31,29)" fg:x="56" fg:w="44"/><text x="0.3190%" y="719.50"></text></g><g><title>AE`aeProcessAppleEvent (44 samples, 0.05%)</title><rect x="0.0690%" y="693" width="0.0542%" height="15" fill="rgb(225,111,53)" fg:x="56" fg:w="44"/><text x="0.3190%" y="703.50"></text></g><g><title>AE`0x000000018d92ea2c (44 samples, 0.05%)</title><rect x="0.0690%" y="677" width="0.0542%" height="15" fill="rgb(238,160,17)" fg:x="56" fg:w="44"/><text x="0.3190%" y="687.50"></text></g><g><title>AE`0x000000018d92ead8 (44 samples, 0.05%)</title><rect x="0.0690%" y="661" width="0.0542%" height="15" fill="rgb(214,148,48)" fg:x="56" fg:w="44"/><text x="0.3190%" y="671.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (44 samples, 0.05%)</title><rect x="0.0690%" y="645" width="0.0542%" height="15" fill="rgb(232,36,49)" fg:x="56" fg:w="44"/><text x="0.3190%" y="655.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (44 samples, 0.05%)</title><rect x="0.0690%" y="629" width="0.0542%" height="15" fill="rgb(209,103,24)" fg:x="56" fg:w="44"/><text x="0.3190%" y="639.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (44 samples, 0.05%)</title><rect x="0.0690%" y="613" width="0.0542%" height="15" fill="rgb(229,88,8)" fg:x="56" fg:w="44"/><text x="0.3190%" y="623.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (44 samples, 0.05%)</title><rect x="0.0690%" y="597" width="0.0542%" height="15" fill="rgb(213,181,19)" fg:x="56" fg:w="44"/><text x="0.3190%" y="607.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (43 samples, 0.05%)</title><rect x="0.0702%" y="581" width="0.0530%" height="15" fill="rgb(254,191,54)" fg:x="57" fg:w="43"/><text x="0.3202%" y="591.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (43 samples, 0.05%)</title><rect x="0.0702%" y="565" width="0.0530%" height="15" fill="rgb(241,83,37)" fg:x="57" fg:w="43"/><text x="0.3202%" y="575.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (43 samples, 0.05%)</title><rect x="0.0702%" y="549" width="0.0530%" height="15" fill="rgb(233,36,39)" fg:x="57" fg:w="43"/><text x="0.3202%" y="559.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (43 samples, 0.05%)</title><rect x="0.0702%" y="533" width="0.0530%" height="15" fill="rgb(226,3,54)" fg:x="57" fg:w="43"/><text x="0.3202%" y="543.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (43 samples, 0.05%)</title><rect x="0.0702%" y="517" width="0.0530%" height="15" fill="rgb(245,192,40)" fg:x="57" fg:w="43"/><text x="0.3202%" y="527.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (43 samples, 0.05%)</title><rect x="0.0702%" y="501" width="0.0530%" height="15" fill="rgb(238,167,29)" fg:x="57" fg:w="43"/><text x="0.3202%" y="511.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (43 samples, 0.05%)</title><rect x="0.0702%" y="485" width="0.0530%" height="15" fill="rgb(232,182,51)" fg:x="57" fg:w="43"/><text x="0.3202%" y="495.50"></text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::app_state::ApplicationDelegate::app_did_finish_launching (43 samples, 0.05%)</title><rect x="0.0702%" y="469" width="0.0530%" height="15" fill="rgb(231,60,39)" fg:x="57" fg:w="43"/><text x="0.3202%" y="479.50"></text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::menu::initialize (10 samples, 0.01%)</title><rect x="0.1108%" y="453" width="0.0123%" height="15" fill="rgb(208,69,12)" fg:x="90" fg:w="10"/><text x="0.3608%" y="463.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (11 samples, 0.01%)</title><rect x="0.1305%" y="565" width="0.0135%" height="15" fill="rgb(235,93,37)" fg:x="106" fg:w="11"/><text x="0.3805%" y="575.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (11 samples, 0.01%)</title><rect x="0.1305%" y="549" width="0.0135%" height="15" fill="rgb(213,116,39)" fg:x="106" fg:w="11"/><text x="0.3805%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (11 samples, 0.01%)</title><rect x="0.1305%" y="533" width="0.0135%" height="15" fill="rgb(222,207,29)" fg:x="106" fg:w="11"/><text x="0.3805%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (11 samples, 0.01%)</title><rect x="0.1305%" y="517" width="0.0135%" height="15" fill="rgb(206,96,30)" fg:x="106" fg:w="11"/><text x="0.3805%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (11 samples, 0.01%)</title><rect x="0.1305%" y="501" width="0.0135%" height="15" fill="rgb(218,138,4)" fg:x="106" fg:w="11"/><text x="0.3805%" y="511.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (19 samples, 0.02%)</title><rect x="0.1256%" y="581" width="0.0234%" height="15" fill="rgb(250,191,14)" fg:x="102" fg:w="19"/><text x="0.3756%" y="591.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (21 samples, 0.03%)</title><rect x="0.1256%" y="629" width="0.0259%" height="15" fill="rgb(239,60,40)" fg:x="102" fg:w="21"/><text x="0.3756%" y="639.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (21 samples, 0.03%)</title><rect x="0.1256%" y="613" width="0.0259%" height="15" fill="rgb(206,27,48)" fg:x="102" fg:w="21"/><text x="0.3756%" y="623.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (21 samples, 0.03%)</title><rect x="0.1256%" y="597" width="0.0259%" height="15" fill="rgb(225,35,8)" fg:x="102" fg:w="21"/><text x="0.3756%" y="607.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (22 samples, 0.03%)</title><rect x="0.1256%" y="645" width="0.0271%" height="15" fill="rgb(250,213,24)" fg:x="102" fg:w="22"/><text x="0.3756%" y="655.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (9 samples, 0.01%)</title><rect x="0.1626%" y="565" width="0.0111%" height="15" fill="rgb(247,123,22)" fg:x="132" fg:w="9"/><text x="0.4126%" y="575.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (11 samples, 0.01%)</title><rect x="0.1626%" y="581" width="0.0135%" height="15" fill="rgb(231,138,38)" fg:x="132" fg:w="11"/><text x="0.4126%" y="591.50"></text></g><g><title>AppKit`-[NSImage drawAtPoint:fromRect:operation:fraction:] (9 samples, 0.01%)</title><rect x="0.1933%" y="309" width="0.0111%" height="15" fill="rgb(231,145,46)" fg:x="157" fg:w="9"/><text x="0.4433%" y="319.50"></text></g><g><title>AppKit`-[NSImage drawInRect:fromRect:operation:fraction:respectFlipped:hints:] (9 samples, 0.01%)</title><rect x="0.1933%" y="293" width="0.0111%" height="15" fill="rgb(251,118,11)" fg:x="157" fg:w="9"/><text x="0.4433%" y="303.50"></text></g><g><title>AppKit`-[NSImage _usingBestRepresentationForRect:context:hints:body:] (9 samples, 0.01%)</title><rect x="0.1933%" y="277" width="0.0111%" height="15" fill="rgb(217,147,25)" fg:x="157" fg:w="9"/><text x="0.4433%" y="287.50"></text></g><g><title>AppKit`__71-[NSImage drawInRect:fromRect:operation:fraction:respectFlipped:hints:]_block_invoke.1371 (9 samples, 0.01%)</title><rect x="0.1933%" y="261" width="0.0111%" height="15" fill="rgb(247,81,37)" fg:x="157" fg:w="9"/><text x="0.4433%" y="271.50"></text></g><g><title>AppKit`-[NSImageRep drawInRect:fromRect:operation:fraction:respectFlipped:hints:] (9 samples, 0.01%)</title><rect x="0.1933%" y="245" width="0.0111%" height="15" fill="rgb(209,12,38)" fg:x="157" fg:w="9"/><text x="0.4433%" y="255.50"></text></g><g><title>AppKit`__74-[NSImageRep drawInRect:fromRect:operation:fraction:respectFlipped:hints:]_block_invoke (9 samples, 0.01%)</title><rect x="0.1933%" y="229" width="0.0111%" height="15" fill="rgb(227,1,9)" fg:x="157" fg:w="9"/><text x="0.4433%" y="239.50"></text></g><g><title>CoreGraphics`CGContextDrawImage (9 samples, 0.01%)</title><rect x="0.1933%" y="213" width="0.0111%" height="15" fill="rgb(248,47,43)" fg:x="157" fg:w="9"/><text x="0.4433%" y="223.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (9 samples, 0.01%)</title><rect x="0.1933%" y="197" width="0.0111%" height="15" fill="rgb(221,10,30)" fg:x="157" fg:w="9"/><text x="0.4433%" y="207.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (9 samples, 0.01%)</title><rect x="0.1933%" y="181" width="0.0111%" height="15" fill="rgb(210,229,1)" fg:x="157" fg:w="9"/><text x="0.4433%" y="191.50"></text></g><g><title>AppKit`-[NSApplication _updateIconImageFromOriginal] (10 samples, 0.01%)</title><rect x="0.1933%" y="357" width="0.0123%" height="15" fill="rgb(222,148,37)" fg:x="157" fg:w="10"/><text x="0.4433%" y="367.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (10 samples, 0.01%)</title><rect x="0.1933%" y="341" width="0.0123%" height="15" fill="rgb(234,67,33)" fg:x="157" fg:w="10"/><text x="0.4433%" y="351.50"></text></g><g><title>AppKit`__45-[NSApplication _updateIconImageFromOriginal]_block_invoke (10 samples, 0.01%)</title><rect x="0.1933%" y="325" width="0.0123%" height="15" fill="rgb(247,98,35)" fg:x="157" fg:w="10"/><text x="0.4433%" y="335.50"></text></g><g><title>AppKit`-[NSApplication _setApplicationIconImage:setDockImage:] (11 samples, 0.01%)</title><rect x="0.1933%" y="373" width="0.0135%" height="15" fill="rgb(247,138,52)" fg:x="157" fg:w="11"/><text x="0.4433%" y="383.50"></text></g><g><title>cipher-solver-comp3260`eframe::native::app_icon::AppTitleIconSetter::update (21 samples, 0.03%)</title><rect x="0.1933%" y="389" width="0.0259%" height="15" fill="rgb(213,79,30)" fg:x="157" fg:w="21"/><text x="0.4433%" y="399.50"></text></g><g><title>AppKit`-[_NSOpenGLViewBackingLayer display] (31 samples, 0.04%)</title><rect x="0.1921%" y="517" width="0.0382%" height="15" fill="rgb(246,177,23)" fg:x="156" fg:w="31"/><text x="0.4421%" y="527.50"></text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::view::WinitView::draw_rect (31 samples, 0.04%)</title><rect x="0.1921%" y="501" width="0.0382%" height="15" fill="rgb(230,62,27)" fg:x="156" fg:w="31"/><text x="0.4421%" y="511.50"></text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::app_state::ApplicationDelegate::handle_redraw (31 samples, 0.04%)</title><rect x="0.1921%" y="485" width="0.0382%" height="15" fill="rgb(216,154,8)" fg:x="156" fg:w="31"/><text x="0.4421%" y="495.50"></text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::event_handler::EventHandler::handle_event (31 samples, 0.04%)</title><rect x="0.1921%" y="469" width="0.0382%" height="15" fill="rgb(244,35,45)" fg:x="156" fg:w="31"/><text x="0.4421%" y="479.50"></text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::event_loop::map_user_event::_{{closure}} (31 samples, 0.04%)</title><rect x="0.1921%" y="453" width="0.0382%" height="15" fill="rgb(251,115,12)" fg:x="156" fg:w="31"/><text x="0.4421%" y="463.50"></text></g><g><title>cipher-solver-comp3260`winit::event_loop::EventLoop&lt;T&gt;::run_app::_{{closure}} (31 samples, 0.04%)</title><rect x="0.1921%" y="437" width="0.0382%" height="15" fill="rgb(240,54,50)" fg:x="156" fg:w="31"/><text x="0.4421%" y="447.50"></text></g><g><title>cipher-solver-comp3260`eframe::native::event_loop_context::with_event_loop_context (31 samples, 0.04%)</title><rect x="0.1921%" y="421" width="0.0382%" height="15" fill="rgb(233,84,52)" fg:x="156" fg:w="31"/><text x="0.4421%" y="431.50"></text></g><g><title>cipher-solver-comp3260`&lt;eframe::native::glow_integration::GlowWinitApp as eframe::native::winit_integration::WinitApp&gt;::run_ui_and_paint (31 samples, 0.04%)</title><rect x="0.1921%" y="405" width="0.0382%" height="15" fill="rgb(207,117,47)" fg:x="156" fg:w="31"/><text x="0.4421%" y="415.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (43 samples, 0.05%)</title><rect x="0.1798%" y="533" width="0.0530%" height="15" fill="rgb(249,43,39)" fg:x="146" fg:w="43"/><text x="0.4298%" y="543.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (47 samples, 0.06%)</title><rect x="0.1773%" y="549" width="0.0579%" height="15" fill="rgb(209,38,44)" fg:x="144" fg:w="47"/><text x="0.4273%" y="559.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (68 samples, 0.08%)</title><rect x="0.1626%" y="597" width="0.0837%" height="15" fill="rgb(236,212,23)" fg:x="132" fg:w="68"/><text x="0.4126%" y="607.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (57 samples, 0.07%)</title><rect x="0.1761%" y="581" width="0.0702%" height="15" fill="rgb(242,79,21)" fg:x="143" fg:w="57"/><text x="0.4261%" y="591.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (56 samples, 0.07%)</title><rect x="0.1773%" y="565" width="0.0690%" height="15" fill="rgb(211,96,35)" fg:x="144" fg:w="56"/><text x="0.4273%" y="575.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (9 samples, 0.01%)</title><rect x="0.2352%" y="549" width="0.0111%" height="15" fill="rgb(253,215,40)" fg:x="191" fg:w="9"/><text x="0.4852%" y="559.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (9 samples, 0.01%)</title><rect x="0.2352%" y="533" width="0.0111%" height="15" fill="rgb(211,81,21)" fg:x="191" fg:w="9"/><text x="0.4852%" y="543.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (9 samples, 0.01%)</title><rect x="0.2352%" y="517" width="0.0111%" height="15" fill="rgb(208,190,38)" fg:x="191" fg:w="9"/><text x="0.4852%" y="527.50"></text></g><g><title>cipher-solver-comp3260`DYLD-STUB$$free (13 samples, 0.02%)</title><rect x="0.2722%" y="293" width="0.0160%" height="15" fill="rgb(235,213,38)" fg:x="221" fg:w="13"/><text x="0.5222%" y="303.50"></text></g><g><title>cipher-solver-comp3260`DYLD-STUB$$realloc (9 samples, 0.01%)</title><rect x="90.7825%" y="245" width="0.0111%" height="15" fill="rgb(237,122,38)" fg:x="73719" fg:w="9"/><text x="91.0325%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (25 samples, 0.03%)</title><rect x="90.9352%" y="181" width="0.0308%" height="15" fill="rgb(244,218,35)" fg:x="73843" fg:w="25"/><text x="91.1852%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (15 samples, 0.02%)</title><rect x="91.0177%" y="165" width="0.0185%" height="15" fill="rgb(240,68,47)" fg:x="73910" fg:w="15"/><text x="91.2677%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_small (86 samples, 0.11%)</title><rect x="90.9660%" y="181" width="0.1059%" height="15" fill="rgb(210,16,53)" fg:x="73868" fg:w="86"/><text x="91.2160%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (19 samples, 0.02%)</title><rect x="91.0485%" y="165" width="0.0234%" height="15" fill="rgb(235,124,12)" fg:x="73935" fg:w="19"/><text x="91.2985%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_size (12 samples, 0.01%)</title><rect x="91.0805%" y="181" width="0.0148%" height="15" fill="rgb(224,169,11)" fg:x="73961" fg:w="12"/><text x="91.3305%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (37 samples, 0.05%)</title><rect x="91.0953%" y="181" width="0.0456%" height="15" fill="rgb(250,166,2)" fg:x="73973" fg:w="37"/><text x="91.3453%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (21 samples, 0.03%)</title><rect x="91.1482%" y="165" width="0.0259%" height="15" fill="rgb(242,216,29)" fg:x="74016" fg:w="21"/><text x="91.3982%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (33 samples, 0.04%)</title><rect x="91.2578%" y="133" width="0.0406%" height="15" fill="rgb(230,116,27)" fg:x="74105" fg:w="33"/><text x="91.5078%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (9 samples, 0.01%)</title><rect x="91.2985%" y="133" width="0.0111%" height="15" fill="rgb(228,99,48)" fg:x="74138" fg:w="9"/><text x="91.5485%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (154 samples, 0.19%)</title><rect x="91.1408%" y="181" width="0.1896%" height="15" fill="rgb(253,11,6)" fg:x="74010" fg:w="154"/><text x="91.3908%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (122 samples, 0.15%)</title><rect x="91.1802%" y="165" width="0.1502%" height="15" fill="rgb(247,143,39)" fg:x="74042" fg:w="122"/><text x="91.4302%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (107 samples, 0.13%)</title><rect x="91.1987%" y="149" width="0.1318%" height="15" fill="rgb(236,97,10)" fg:x="74057" fg:w="107"/><text x="91.4487%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (17 samples, 0.02%)</title><rect x="91.3095%" y="133" width="0.0209%" height="15" fill="rgb(233,208,19)" fg:x="74147" fg:w="17"/><text x="91.5595%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (368 samples, 0.45%)</title><rect x="90.9019%" y="197" width="0.4532%" height="15" fill="rgb(216,164,2)" fg:x="73816" fg:w="368"/><text x="91.1519%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (20 samples, 0.02%)</title><rect x="91.3305%" y="181" width="0.0246%" height="15" fill="rgb(220,129,5)" fg:x="74164" fg:w="20"/><text x="91.5805%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (10 samples, 0.01%)</title><rect x="91.3428%" y="165" width="0.0123%" height="15" fill="rgb(242,17,10)" fg:x="74174" fg:w="10"/><text x="91.5928%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (715 samples, 0.88%)</title><rect x="90.8477%" y="213" width="0.8805%" height="15" fill="rgb(242,107,0)" fg:x="73772" fg:w="715"/><text x="91.0977%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (296 samples, 0.36%)</title><rect x="91.3637%" y="197" width="0.3645%" height="15" fill="rgb(251,28,31)" fg:x="74191" fg:w="296"/><text x="91.6137%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_size (13 samples, 0.02%)</title><rect x="91.7381%" y="213" width="0.0160%" height="15" fill="rgb(233,223,10)" fg:x="74495" fg:w="13"/><text x="91.9881%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.01%)</title><rect x="91.7627%" y="213" width="0.0135%" height="15" fill="rgb(215,21,27)" fg:x="74515" fg:w="11"/><text x="92.0127%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (790 samples, 0.97%)</title><rect x="90.8071%" y="229" width="0.9729%" height="15" fill="rgb(232,23,21)" fg:x="73739" fg:w="790"/><text x="91.0571%" y="239.50"></text></g><g><title>cipher-solver-comp3260`alloc::raw_vec::finish_grow (802 samples, 0.99%)</title><rect x="90.8009%" y="245" width="0.9876%" height="15" fill="rgb(244,5,23)" fg:x="73734" fg:w="802"/><text x="91.0509%" y="255.50"></text></g><g><title>cipher-solver-comp3260`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (838 samples, 1.03%)</title><rect x="90.7652%" y="261" width="1.0320%" height="15" fill="rgb(226,81,46)" fg:x="73705" fg:w="838"/><text x="91.0152%" y="271.50"></text></g><g><title>cipher-solver-comp3260`alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="91.7972%" y="261" width="0.0111%" height="15" fill="rgb(247,70,30)" fg:x="74543" fg:w="9"/><text x="92.0472%" y="271.50"></text></g><g><title>cipher-solver-comp3260`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,050 samples, 6.22%)</title><rect x="85.6079%" y="277" width="6.2189%" height="15" fill="rgb(212,68,19)" fg:x="69517" fg:w="5050"/><text x="85.8579%" y="287.50">cipher-s..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.01%)</title><rect x="91.8144%" y="261" width="0.0123%" height="15" fill="rgb(240,187,13)" fg:x="74557" fg:w="10"/><text x="92.0644%" y="271.50"></text></g><g><title>cipher-solver-comp3260`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,292 samples, 5.29%)</title><rect x="91.8268%" y="277" width="5.2855%" height="15" fill="rgb(223,113,26)" fg:x="74567" fg:w="4292"/><text x="92.0768%" y="287.50">cipher..</text></g><g><title>cipher-solver-comp3260`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (42 samples, 0.05%)</title><rect x="97.1184%" y="261" width="0.0517%" height="15" fill="rgb(206,192,2)" fg:x="78864" fg:w="42"/><text x="97.3684%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (9 samples, 0.01%)</title><rect x="97.1590%" y="245" width="0.0111%" height="15" fill="rgb(241,108,4)" fg:x="78897" fg:w="9"/><text x="97.4090%" y="255.50"></text></g><g><title>cipher-solver-comp3260`itertools::permutations::advance (25 samples, 0.03%)</title><rect x="97.1713%" y="261" width="0.0308%" height="15" fill="rgb(247,173,49)" fg:x="78907" fg:w="25"/><text x="97.4213%" y="271.50"></text></g><g><title>cipher-solver-comp3260`&lt;itertools::permutations::Permutations&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.09%)</title><rect x="97.1122%" y="277" width="0.0948%" height="15" fill="rgb(224,114,35)" fg:x="78859" fg:w="77"/><text x="97.3622%" y="287.50"></text></g><g><title>cipher-solver-comp3260`DYLD-STUB$$memcmp (16 samples, 0.02%)</title><rect x="97.2083%" y="277" width="0.0197%" height="15" fill="rgb(245,159,27)" fg:x="78937" fg:w="16"/><text x="97.4583%" y="287.50"></text></g><g><title>cipher-solver-comp3260`alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::pop (71 samples, 0.09%)</title><rect x="97.2304%" y="277" width="0.0874%" height="15" fill="rgb(245,172,44)" fg:x="78955" fg:w="71"/><text x="97.4804%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (9 samples, 0.01%)</title><rect x="97.3499%" y="229" width="0.0111%" height="15" fill="rgb(236,23,11)" fg:x="79052" fg:w="9"/><text x="97.5999%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (11 samples, 0.01%)</title><rect x="97.3819%" y="197" width="0.0135%" height="15" fill="rgb(205,117,38)" fg:x="79078" fg:w="11"/><text x="97.6319%" y="207.50"></text></g><g><title>cipher-solver-comp3260`alloc::raw_vec::finish_grow (64 samples, 0.08%)</title><rect x="97.3289%" y="261" width="0.0788%" height="15" fill="rgb(237,72,25)" fg:x="79035" fg:w="64"/><text x="97.5789%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (52 samples, 0.06%)</title><rect x="97.3437%" y="245" width="0.0640%" height="15" fill="rgb(244,70,9)" fg:x="79047" fg:w="52"/><text x="97.5937%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (37 samples, 0.05%)</title><rect x="97.3622%" y="229" width="0.0456%" height="15" fill="rgb(217,125,39)" fg:x="79062" fg:w="37"/><text x="97.6122%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (29 samples, 0.04%)</title><rect x="97.3721%" y="213" width="0.0357%" height="15" fill="rgb(235,36,10)" fg:x="79070" fg:w="29"/><text x="97.6221%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.01%)</title><rect x="97.4078%" y="261" width="0.0123%" height="15" fill="rgb(251,123,47)" fg:x="79099" fg:w="10"/><text x="97.6578%" y="271.50"></text></g><g><title>cipher-solver-comp3260`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (89 samples, 0.11%)</title><rect x="97.3179%" y="277" width="0.1096%" height="15" fill="rgb(221,13,13)" fg:x="79026" fg:w="89"/><text x="97.5679%" y="287.50"></text></g><g><title>cipher-solver-comp3260`core::str::pattern::StrSearcher::new (362 samples, 0.45%)</title><rect x="97.4275%" y="277" width="0.4458%" height="15" fill="rgb(238,131,9)" fg:x="79115" fg:w="362"/><text x="97.6775%" y="287.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (256 samples, 0.32%)</title><rect x="97.8930%" y="245" width="0.3153%" height="15" fill="rgb(211,50,8)" fg:x="79493" fg:w="256"/><text x="98.1430%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (242 samples, 0.30%)</title><rect x="97.9102%" y="229" width="0.2980%" height="15" fill="rgb(245,182,24)" fg:x="79507" fg:w="242"/><text x="98.1602%" y="239.50"></text></g><g><title>cipher-solver-comp3260`std::sys::pal::unix::time::Timespec::now (258 samples, 0.32%)</title><rect x="97.8917%" y="261" width="0.3177%" height="15" fill="rgb(242,14,37)" fg:x="79492" fg:w="258"/><text x="98.1417%" y="271.50"></text></g><g><title>cipher-solver-comp3260`indicatif::progress_bar::ProgressBar::inc (281 samples, 0.35%)</title><rect x="97.8733%" y="277" width="0.3460%" height="15" fill="rgb(246,228,12)" fg:x="79477" fg:w="281"/><text x="98.1233%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`write (19 samples, 0.02%)</title><rect x="98.2328%" y="165" width="0.0234%" height="15" fill="rgb(213,55,15)" fg:x="79769" fg:w="19"/><text x="98.4828%" y="175.50"></text></g><g><title>cipher-solver-comp3260`console::term::Term::flush (22 samples, 0.03%)</title><rect x="98.2304%" y="213" width="0.0271%" height="15" fill="rgb(209,9,3)" fg:x="79767" fg:w="22"/><text x="98.4804%" y="223.50"></text></g><g><title>cipher-solver-comp3260`console::term::Term::write_through (21 samples, 0.03%)</title><rect x="98.2316%" y="197" width="0.0259%" height="15" fill="rgb(230,59,30)" fg:x="79768" fg:w="21"/><text x="98.4816%" y="207.50"></text></g><g><title>cipher-solver-comp3260`&lt;std::io::stdio::Stderr as std::io::Write&gt;::write_all (20 samples, 0.02%)</title><rect x="98.2328%" y="181" width="0.0246%" height="15" fill="rgb(209,121,21)" fg:x="79769" fg:w="20"/><text x="98.4828%" y="191.50"></text></g><g><title>cipher-solver-comp3260`indicatif::draw_target::Drawable::draw (32 samples, 0.04%)</title><rect x="98.2304%" y="229" width="0.0394%" height="15" fill="rgb(220,109,13)" fg:x="79767" fg:w="32"/><text x="98.4804%" y="239.50"></text></g><g><title>cipher-solver-comp3260`indicatif::style::ProgressStyle::push_line (14 samples, 0.02%)</title><rect x="98.2759%" y="213" width="0.0172%" height="15" fill="rgb(232,18,1)" fg:x="79804" fg:w="14"/><text x="98.5259%" y="223.50"></text></g><g><title>cipher-solver-comp3260`indicatif::style::ProgressStyle::format_state (20 samples, 0.02%)</title><rect x="98.2698%" y="229" width="0.0246%" height="15" fill="rgb(215,41,42)" fg:x="79799" fg:w="20"/><text x="98.5198%" y="239.50"></text></g><g><title>cipher-solver-comp3260`indicatif::state::BarState::draw (62 samples, 0.08%)</title><rect x="98.2205%" y="245" width="0.0764%" height="15" fill="rgb(224,123,36)" fg:x="79759" fg:w="62"/><text x="98.4705%" y="255.50"></text></g><g><title>cipher-solver-comp3260`indicatif::progress_bar::ProgressBar::tick_inner (66 samples, 0.08%)</title><rect x="98.2193%" y="277" width="0.0813%" height="15" fill="rgb(240,125,3)" fg:x="79758" fg:w="66"/><text x="98.4693%" y="287.50"></text></g><g><title>cipher-solver-comp3260`indicatif::state::BarState::update_estimate_and_draw (65 samples, 0.08%)</title><rect x="98.2205%" y="261" width="0.0800%" height="15" fill="rgb(205,98,50)" fg:x="79759" fg:w="65"/><text x="98.4705%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.02%)</title><rect x="98.3092%" y="277" width="0.0185%" height="15" fill="rgb(205,185,37)" fg:x="79831" fg:w="15"/><text x="98.5592%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (27 samples, 0.03%)</title><rect x="98.3277%" y="277" width="0.0332%" height="15" fill="rgb(238,207,15)" fg:x="79846" fg:w="27"/><text x="98.5777%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (32 samples, 0.04%)</title><rect x="98.3609%" y="277" width="0.0394%" height="15" fill="rgb(213,199,42)" fg:x="79873" fg:w="32"/><text x="98.6109%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (38 samples, 0.05%)</title><rect x="98.4878%" y="261" width="0.0468%" height="15" fill="rgb(235,201,11)" fg:x="79976" fg:w="38"/><text x="98.7378%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (15 samples, 0.02%)</title><rect x="98.5346%" y="261" width="0.0185%" height="15" fill="rgb(207,46,11)" fg:x="80014" fg:w="15"/><text x="98.7846%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (15 samples, 0.02%)</title><rect x="98.5530%" y="261" width="0.0185%" height="15" fill="rgb(241,35,35)" fg:x="80029" fg:w="15"/><text x="98.8030%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_small (194 samples, 0.24%)</title><rect x="98.4003%" y="277" width="0.2389%" height="15" fill="rgb(243,32,47)" fg:x="79905" fg:w="194"/><text x="98.6503%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (55 samples, 0.07%)</title><rect x="98.5715%" y="261" width="0.0677%" height="15" fill="rgb(247,202,23)" fg:x="80044" fg:w="55"/><text x="98.8215%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc_type (21 samples, 0.03%)</title><rect x="98.6405%" y="277" width="0.0259%" height="15" fill="rgb(219,102,11)" fg:x="80100" fg:w="21"/><text x="98.8905%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (9 samples, 0.01%)</title><rect x="98.7217%" y="229" width="0.0111%" height="15" fill="rgb(243,110,44)" fg:x="80166" fg:w="9"/><text x="98.9717%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (36 samples, 0.04%)</title><rect x="98.7008%" y="261" width="0.0443%" height="15" fill="rgb(222,74,54)" fg:x="80149" fg:w="36"/><text x="98.9508%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (21 samples, 0.03%)</title><rect x="98.7193%" y="245" width="0.0259%" height="15" fill="rgb(216,99,12)" fg:x="80164" fg:w="21"/><text x="98.9693%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (395 samples, 0.49%)</title><rect x="98.6762%" y="277" width="0.4864%" height="15" fill="rgb(226,22,26)" fg:x="80129" fg:w="395"/><text x="98.9262%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (339 samples, 0.42%)</title><rect x="98.7451%" y="261" width="0.4175%" height="15" fill="rgb(217,163,10)" fg:x="80185" fg:w="339"/><text x="98.9951%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (94 samples, 0.12%)</title><rect x="99.1638%" y="277" width="0.1158%" height="15" fill="rgb(213,25,53)" fg:x="80525" fg:w="94"/><text x="99.4138%" y="287.50"></text></g><g><title>cipher-solver-comp3260`cipher_solver_comp3260::Decrypter::decrypt (80,382 samples, 98.99%)</title><rect x="0.2968%" y="293" width="98.9877%" height="15" fill="rgb(252,105,26)" fg:x="241" fg:w="80382"/><text x="0.5468%" y="303.50">cipher-solver-comp3260`cipher_solver_comp3260::Decrypter::decrypt</text></g><g><title>cipher-solver-comp3260`core::str::pattern::StrSearcher::new (29 samples, 0.04%)</title><rect x="99.2845%" y="293" width="0.0357%" height="15" fill="rgb(220,39,43)" fg:x="80623" fg:w="29"/><text x="99.5345%" y="303.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (9 samples, 0.01%)</title><rect x="99.3473%" y="37" width="0.0111%" height="15" fill="rgb(229,68,48)" fg:x="80674" fg:w="9"/><text x="99.5973%" y="47.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (18 samples, 0.02%)</title><rect x="99.3399%" y="53" width="0.0222%" height="15" fill="rgb(252,8,32)" fg:x="80668" fg:w="18"/><text x="99.5899%" y="63.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (43 samples, 0.05%)</title><rect x="99.3276%" y="85" width="0.0530%" height="15" fill="rgb(223,20,43)" fg:x="80658" fg:w="43"/><text x="99.5776%" y="95.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (34 samples, 0.04%)</title><rect x="99.3387%" y="69" width="0.0419%" height="15" fill="rgb(229,81,49)" fg:x="80667" fg:w="34"/><text x="99.5887%" y="79.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (44 samples, 0.05%)</title><rect x="99.3276%" y="101" width="0.0542%" height="15" fill="rgb(236,28,36)" fg:x="80658" fg:w="44"/><text x="99.5776%" y="111.50"></text></g><g><title>AppKit`_DPSNextEvent (46 samples, 0.06%)</title><rect x="99.3264%" y="149" width="0.0566%" height="15" fill="rgb(249,185,26)" fg:x="80657" fg:w="46"/><text x="99.5764%" y="159.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (45 samples, 0.06%)</title><rect x="99.3276%" y="133" width="0.0554%" height="15" fill="rgb(249,174,33)" fg:x="80658" fg:w="45"/><text x="99.5776%" y="143.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (45 samples, 0.06%)</title><rect x="99.3276%" y="117" width="0.0554%" height="15" fill="rgb(233,201,37)" fg:x="80658" fg:w="45"/><text x="99.5776%" y="127.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (51 samples, 0.06%)</title><rect x="99.3252%" y="165" width="0.0628%" height="15" fill="rgb(221,78,26)" fg:x="80656" fg:w="51"/><text x="99.5752%" y="175.50"></text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::app::WinitApplication::send_event (9 samples, 0.01%)</title><rect x="99.3880%" y="165" width="0.0111%" height="15" fill="rgb(250,127,30)" fg:x="80707" fg:w="9"/><text x="99.6380%" y="175.50"></text></g><g><title>AppKit`__35-[NSApplication runModalForWindow:]_block_invoke (64 samples, 0.08%)</title><rect x="99.3215%" y="213" width="0.0788%" height="15" fill="rgb(230,49,44)" fg:x="80653" fg:w="64"/><text x="99.5715%" y="223.50"></text></g><g><title>AppKit`__35-[NSApplication runModalForWindow:]_block_invoke_2 (64 samples, 0.08%)</title><rect x="99.3215%" y="197" width="0.0788%" height="15" fill="rgb(229,67,23)" fg:x="80653" fg:w="64"/><text x="99.5715%" y="207.50"></text></g><g><title>AppKit`-[NSApplication _doModalLoop:peek:] (62 samples, 0.08%)</title><rect x="99.3239%" y="181" width="0.0764%" height="15" fill="rgb(249,83,47)" fg:x="80655" fg:w="62"/><text x="99.5739%" y="191.50"></text></g><g><title>AppKit`-[NSApplication runModalForWindow:] (66 samples, 0.08%)</title><rect x="99.3215%" y="245" width="0.0813%" height="15" fill="rgb(215,43,3)" fg:x="80653" fg:w="66"/><text x="99.5715%" y="255.50"></text></g><g><title>AppKit`_NSTryRunModal (66 samples, 0.08%)</title><rect x="99.3215%" y="229" width="0.0813%" height="15" fill="rgb(238,154,13)" fg:x="80653" fg:w="66"/><text x="99.5715%" y="239.50"></text></g><g><title>AppKit`-[NSSavePanel runModal] (68 samples, 0.08%)</title><rect x="99.3215%" y="261" width="0.0837%" height="15" fill="rgb(219,56,2)" fg:x="80653" fg:w="68"/><text x="99.5715%" y="271.50"></text></g><g><title>cipher-solver-comp3260`rfd::backend::macos::file_dialog::_&lt;impl rfd::backend::FilePickerDialogImpl for rfd::file_dialog::FileDialog&gt;::pick_file (77 samples, 0.09%)</title><rect x="99.3215%" y="293" width="0.0948%" height="15" fill="rgb(233,0,4)" fg:x="80653" fg:w="77"/><text x="99.5715%" y="303.50"></text></g><g><title>cipher-solver-comp3260`rfd::backend::macos::utils::run_on_main (77 samples, 0.09%)</title><rect x="99.3215%" y="277" width="0.0948%" height="15" fill="rgb(235,30,7)" fg:x="80653" fg:w="77"/><text x="99.5715%" y="287.50"></text></g><g><title>cipher-solver-comp3260`rfd::backend::macos::file_dialog::panel_ffi::Panel::build_pick_file (9 samples, 0.01%)</title><rect x="99.4052%" y="261" width="0.0111%" height="15" fill="rgb(250,79,13)" fg:x="80721" fg:w="9"/><text x="99.6552%" y="271.50"></text></g><g><title>cipher-solver-comp3260`objc2_app_kit::generated::__NSOpenPanel::NSOpenPanel::openPanel (9 samples, 0.01%)</title><rect x="99.4052%" y="245" width="0.0111%" height="15" fill="rgb(211,146,34)" fg:x="80721" fg:w="9"/><text x="99.6552%" y="255.50"></text></g><g><title>AppKit`+[NSSavePanel _createPanel] (9 samples, 0.01%)</title><rect x="99.4052%" y="229" width="0.0111%" height="15" fill="rgb(228,22,38)" fg:x="80721" fg:w="9"/><text x="99.6552%" y="239.50"></text></g><g><title>AppKit`-[NSSavePanel init] (9 samples, 0.01%)</title><rect x="99.4052%" y="213" width="0.0111%" height="15" fill="rgb(235,168,5)" fg:x="80721" fg:w="9"/><text x="99.6552%" y="223.50"></text></g><g><title>AppKit`-[NSOpenPanel initWithContentRect:styleMask:backing:defer:] (9 samples, 0.01%)</title><rect x="99.4052%" y="197" width="0.0111%" height="15" fill="rgb(221,155,16)" fg:x="80721" fg:w="9"/><text x="99.6552%" y="207.50"></text></g><g><title>AppKit`-[NSSavePanel initWithContentRect:styleMask:backing:defer:] (9 samples, 0.01%)</title><rect x="99.4052%" y="181" width="0.0111%" height="15" fill="rgb(215,215,53)" fg:x="80721" fg:w="9"/><text x="99.6552%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_free (47 samples, 0.06%)</title><rect x="99.4175%" y="293" width="0.0579%" height="15" fill="rgb(223,4,10)" fg:x="80731" fg:w="47"/><text x="99.6675%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (18 samples, 0.02%)</title><rect x="99.4754%" y="293" width="0.0222%" height="15" fill="rgb(234,103,6)" fg:x="80778" fg:w="18"/><text x="99.7254%" y="303.50"></text></g><g><title>cipher-solver-comp3260`core::ops::function::FnOnce::call_once{{vtable.shim}} (80,613 samples, 99.27%)</title><rect x="0.2549%" y="357" width="99.2722%" height="15" fill="rgb(227,97,0)" fg:x="207" fg:w="80613"/><text x="0.5049%" y="367.50">cipher-solver-comp3260`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>cipher-solver-comp3260`egui::ui::Ui::allocate_new_ui_dyn (80,605 samples, 99.26%)</title><rect x="0.2648%" y="341" width="99.2624%" height="15" fill="rgb(234,150,53)" fg:x="215" fg:w="80605"/><text x="0.5148%" y="351.50">cipher-solver-comp3260`egui::ui::Ui::allocate_new_ui_dyn</text></g><g><title>cipher-solver-comp3260`core::ops::function::FnOnce::call_once{{vtable.shim}} (80,605 samples, 99.26%)</title><rect x="0.2648%" y="325" width="99.2624%" height="15" fill="rgb(228,201,54)" fg:x="215" fg:w="80605"/><text x="0.5148%" y="335.50">cipher-solver-comp3260`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>cipher-solver-comp3260`core::ops::function::FnOnce::call_once{{vtable.shim}} (80,605 samples, 99.26%)</title><rect x="0.2648%" y="309" width="99.2624%" height="15" fill="rgb(222,22,37)" fg:x="215" fg:w="80605"/><text x="0.5148%" y="319.50">cipher-solver-comp3260`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>cipher-solver-comp3260`egui::ui::Ui::allocate_new_ui_dyn (80,614 samples, 99.27%)</title><rect x="0.2549%" y="373" width="99.2734%" height="15" fill="rgb(237,53,32)" fg:x="207" fg:w="80614"/><text x="0.5049%" y="383.50">cipher-solver-comp3260`egui::ui::Ui::allocate_new_ui_dyn</text></g><g><title>cipher-solver-comp3260`&lt;cipher_solver_comp3260::MyApp as eframe::epi::App&gt;::update (80,615 samples, 99.27%)</title><rect x="0.2549%" y="453" width="99.2747%" height="15" fill="rgb(233,25,53)" fg:x="207" fg:w="80615"/><text x="0.5049%" y="463.50">cipher-solver-comp3260`&lt;cipher_solver_comp3260::MyApp as eframe::epi::App&gt;::update</text></g><g><title>cipher-solver-comp3260`egui::containers::panel::CentralPanel::show_dyn (80,615 samples, 99.27%)</title><rect x="0.2549%" y="437" width="99.2747%" height="15" fill="rgb(210,40,34)" fg:x="207" fg:w="80615"/><text x="0.5049%" y="447.50">cipher-solver-comp3260`egui::containers::panel::CentralPanel::show_dyn</text></g><g><title>cipher-solver-comp3260`egui::containers::frame::Frame::show_dyn (80,615 samples, 99.27%)</title><rect x="0.2549%" y="421" width="99.2747%" height="15" fill="rgb(241,220,44)" fg:x="207" fg:w="80615"/><text x="0.5049%" y="431.50">cipher-solver-comp3260`egui::containers::frame::Frame::show_dyn</text></g><g><title>cipher-solver-comp3260`core::ops::function::FnOnce::call_once{{vtable.shim}} (80,615 samples, 99.27%)</title><rect x="0.2549%" y="405" width="99.2747%" height="15" fill="rgb(235,28,35)" fg:x="207" fg:w="80615"/><text x="0.5049%" y="415.50">cipher-solver-comp3260`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>cipher-solver-comp3260`core::ops::function::FnOnce::call_once{{vtable.shim}} (80,615 samples, 99.27%)</title><rect x="0.2549%" y="389" width="99.2747%" height="15" fill="rgb(210,56,17)" fg:x="207" fg:w="80615"/><text x="0.5049%" y="399.50">cipher-solver-comp3260`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>cipher-solver-comp3260`eframe::native::epi_integration::EpiIntegration::update (80,623 samples, 99.28%)</title><rect x="0.2537%" y="485" width="99.2845%" height="15" fill="rgb(224,130,29)" fg:x="206" fg:w="80623"/><text x="0.5037%" y="495.50">cipher-solver-comp3260`eframe::native::epi_integration::EpiIntegration::update</text></g><g><title>cipher-solver-comp3260`egui::context::Context::run (80,623 samples, 99.28%)</title><rect x="0.2537%" y="469" width="99.2845%" height="15" fill="rgb(235,212,8)" fg:x="206" fg:w="80623"/><text x="0.5037%" y="479.50">cipher-solver-comp3260`egui::context::Context::run</text></g><g><title>cipher-solver-comp3260`egui::context::Context::tessellate (12 samples, 0.01%)</title><rect x="99.5431%" y="485" width="0.0148%" height="15" fill="rgb(223,33,50)" fg:x="80833" fg:w="12"/><text x="99.7931%" y="495.50"></text></g><g><title>cipher-solver-comp3260`epaint::tessellator::Tessellator::tessellate_shapes (12 samples, 0.01%)</title><rect x="99.5431%" y="469" width="0.0148%" height="15" fill="rgb(219,149,13)" fg:x="80833" fg:w="12"/><text x="99.7931%" y="479.50"></text></g><g><title>cipher-solver-comp3260`epaint::tessellator::Tessellator::tessellate_clipped_shape (12 samples, 0.01%)</title><rect x="99.5431%" y="453" width="0.0148%" height="15" fill="rgb(250,156,29)" fg:x="80833" fg:w="12"/><text x="99.7931%" y="463.50"></text></g><g><title>cipher-solver-comp3260`epaint::tessellator::Tessellator::tessellate_shape (12 samples, 0.01%)</title><rect x="99.5431%" y="437" width="0.0148%" height="15" fill="rgb(216,193,19)" fg:x="80833" fg:w="12"/><text x="99.7931%" y="447.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldRenderVertexArray(GLDContextRec*, unsigned int, unsigned int, int, int, unsigned int, void const*, int, void const*) (11 samples, 0.01%)</title><rect x="99.5678%" y="421" width="0.0135%" height="15" fill="rgb(216,135,14)" fg:x="80853" fg:w="11"/><text x="99.8178%" y="431.50"></text></g><g><title>GLEngine`glDrawElements_GL3Exec (12 samples, 0.01%)</title><rect x="99.5678%" y="437" width="0.0148%" height="15" fill="rgb(241,47,5)" fg:x="80853" fg:w="12"/><text x="99.8178%" y="447.50"></text></g><g><title>cipher-solver-comp3260`egui_glow::painter::Painter::paint_mesh (21 samples, 0.03%)</title><rect x="99.5604%" y="453" width="0.0259%" height="15" fill="rgb(233,42,35)" fg:x="80847" fg:w="21"/><text x="99.8104%" y="463.50"></text></g><g><title>cipher-solver-comp3260`egui_glow::painter::Painter::paint_primitives (25 samples, 0.03%)</title><rect x="99.5591%" y="469" width="0.0308%" height="15" fill="rgb(231,13,6)" fg:x="80846" fg:w="25"/><text x="99.8091%" y="479.50"></text></g><g><title>cipher-solver-comp3260`egui_glow::painter::Painter::paint_and_update_textures (26 samples, 0.03%)</title><rect x="99.5591%" y="485" width="0.0320%" height="15" fill="rgb(207,181,40)" fg:x="80846" fg:w="26"/><text x="99.8091%" y="495.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::flushContext (30 samples, 0.04%)</title><rect x="99.6059%" y="373" width="0.0369%" height="15" fill="rgb(254,173,49)" fg:x="80884" fg:w="30"/><text x="99.8559%" y="383.50"></text></g><g><title>Metal`-[_MTLCommandQueue submitCommandBuffer:] (30 samples, 0.04%)</title><rect x="99.6059%" y="357" width="0.0369%" height="15" fill="rgb(221,1,38)" fg:x="80884" fg:w="30"/><text x="99.8559%" y="367.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (30 samples, 0.04%)</title><rect x="99.6059%" y="341" width="0.0369%" height="15" fill="rgb(206,124,46)" fg:x="80884" fg:w="30"/><text x="99.8559%" y="351.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (30 samples, 0.04%)</title><rect x="99.6059%" y="325" width="0.0369%" height="15" fill="rgb(249,21,11)" fg:x="80884" fg:w="30"/><text x="99.8559%" y="335.50"></text></g><g><title>Metal`__40-[_MTLCommandQueue submitCommandBuffer:]_block_invoke (30 samples, 0.04%)</title><rect x="99.6059%" y="309" width="0.0369%" height="15" fill="rgb(222,201,40)" fg:x="80884" fg:w="30"/><text x="99.8559%" y="319.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (30 samples, 0.04%)</title><rect x="99.6059%" y="293" width="0.0369%" height="15" fill="rgb(235,61,29)" fg:x="80884" fg:w="30"/><text x="99.8559%" y="303.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (29 samples, 0.04%)</title><rect x="99.6072%" y="277" width="0.0357%" height="15" fill="rgb(219,207,3)" fg:x="80885" fg:w="29"/><text x="99.8572%" y="287.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (29 samples, 0.04%)</title><rect x="99.6072%" y="261" width="0.0357%" height="15" fill="rgb(222,56,46)" fg:x="80885" fg:w="29"/><text x="99.8572%" y="271.50"></text></g><g><title>IOKit`iokit_user_client_trap (29 samples, 0.04%)</title><rect x="99.6072%" y="245" width="0.0357%" height="15" fill="rgb(239,76,54)" fg:x="80885" fg:w="29"/><text x="99.8572%" y="255.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldEndPrimitiveBuffer(GLDContextRec*, unsigned int, unsigned int, int) (9 samples, 0.01%)</title><rect x="99.6527%" y="341" width="0.0111%" height="15" fill="rgb(231,124,27)" fg:x="80922" fg:w="9"/><text x="99.9027%" y="351.50"></text></g><g><title>GLEngine`glDrawArrays_IMM_Exec (31 samples, 0.04%)</title><rect x="99.6441%" y="373" width="0.0382%" height="15" fill="rgb(249,195,6)" fg:x="80915" fg:w="31"/><text x="99.8941%" y="383.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_ExecCore (24 samples, 0.03%)</title><rect x="99.6527%" y="357" width="0.0296%" height="15" fill="rgb(237,174,47)" fg:x="80922" fg:w="24"/><text x="99.9027%" y="367.50"></text></g><g><title>GLEngine`gleBeginPrimitiveTCLFunc (15 samples, 0.02%)</title><rect x="99.6638%" y="341" width="0.0185%" height="15" fill="rgb(206,201,31)" fg:x="80931" fg:w="15"/><text x="99.9138%" y="351.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldBeginPrimitiveBuffer(GLDContextRec*, unsigned int, int*) (15 samples, 0.02%)</title><rect x="99.6638%" y="325" width="0.0185%" height="15" fill="rgb(231,57,52)" fg:x="80931" fg:w="15"/><text x="99.9138%" y="335.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::beginRenderPass (15 samples, 0.02%)</title><rect x="99.6638%" y="309" width="0.0185%" height="15" fill="rgb(248,177,22)" fg:x="80931" fg:w="15"/><text x="99.9138%" y="319.50"></text></g><g><title>AppKit`-[NSIOAccelSurface frontBuffer] (65 samples, 0.08%)</title><rect x="99.6059%" y="389" width="0.0800%" height="15" fill="rgb(215,211,37)" fg:x="80884" fg:w="65"/><text x="99.8559%" y="399.50"></text></g><g><title>AppKit`-[NSCGLSurface flushRect:] (85 samples, 0.10%)</title><rect x="99.6047%" y="405" width="0.1047%" height="15" fill="rgb(241,128,51)" fg:x="80883" fg:w="85"/><text x="99.8547%" y="415.50"></text></g><g><title>AppKit`NSCGLSurfaceFlush (90 samples, 0.11%)</title><rect x="99.6047%" y="421" width="0.1108%" height="15" fill="rgb(227,165,31)" fg:x="80883" fg:w="90"/><text x="99.8547%" y="431.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (28 samples, 0.03%)</title><rect x="99.7180%" y="325" width="0.0345%" height="15" fill="rgb(228,167,24)" fg:x="80975" fg:w="28"/><text x="99.9680%" y="335.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (28 samples, 0.03%)</title><rect x="99.7180%" y="309" width="0.0345%" height="15" fill="rgb(228,143,12)" fg:x="80975" fg:w="28"/><text x="99.9680%" y="319.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (28 samples, 0.03%)</title><rect x="99.7180%" y="293" width="0.0345%" height="15" fill="rgb(249,149,8)" fg:x="80975" fg:w="28"/><text x="99.9680%" y="303.50"></text></g><g><title>IOKit`iokit_user_client_trap (28 samples, 0.03%)</title><rect x="99.7180%" y="277" width="0.0345%" height="15" fill="rgb(243,35,44)" fg:x="80975" fg:w="28"/><text x="99.9680%" y="287.50"></text></g><g><title>Metal`-[_MTLCommandQueue submitCommandBuffer:] (29 samples, 0.04%)</title><rect x="99.7180%" y="389" width="0.0357%" height="15" fill="rgb(246,89,9)" fg:x="80975" fg:w="29"/><text x="99.9680%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (29 samples, 0.04%)</title><rect x="99.7180%" y="373" width="0.0357%" height="15" fill="rgb(233,213,13)" fg:x="80975" fg:w="29"/><text x="99.9680%" y="383.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (29 samples, 0.04%)</title><rect x="99.7180%" y="357" width="0.0357%" height="15" fill="rgb(233,141,41)" fg:x="80975" fg:w="29"/><text x="99.9680%" y="367.50"></text></g><g><title>Metal`__40-[_MTLCommandQueue submitCommandBuffer:]_block_invoke (29 samples, 0.04%)</title><rect x="99.7180%" y="341" width="0.0357%" height="15" fill="rgb(239,167,4)" fg:x="80975" fg:w="29"/><text x="99.9680%" y="351.50"></text></g><g><title>AppleMetalOpenGLRenderer`GLDContextRec::flushContext (32 samples, 0.04%)</title><rect x="99.7155%" y="405" width="0.0394%" height="15" fill="rgb(209,217,16)" fg:x="80973" fg:w="32"/><text x="99.9655%" y="415.50"></text></g><g><title>cipher-solver-comp3260`glutin::api::cgl::context::ContextInner::flush_buffer (125 samples, 0.15%)</title><rect x="99.6047%" y="485" width="0.1539%" height="15" fill="rgb(219,88,35)" fg:x="80883" fg:w="125"/><text x="99.8547%" y="495.50"></text></g><g><title>AppKit`-[NSOpenGLContext flushBuffer] (125 samples, 0.15%)</title><rect x="99.6047%" y="469" width="0.1539%" height="15" fill="rgb(220,193,23)" fg:x="80883" fg:w="125"/><text x="99.8547%" y="479.50"></text></g><g><title>OpenGL`CGLFlushDrawable (125 samples, 0.15%)</title><rect x="99.6047%" y="453" width="0.1539%" height="15" fill="rgb(230,90,52)" fg:x="80883" fg:w="125"/><text x="99.8547%" y="463.50"></text></g><g><title>GLEngine`glSwap_Exec (125 samples, 0.15%)</title><rect x="99.6047%" y="437" width="0.1539%" height="15" fill="rgb(252,106,19)" fg:x="80883" fg:w="125"/><text x="99.8547%" y="447.50"></text></g><g><title>AppleMetalOpenGLRenderer`gldPresentFramebufferData (35 samples, 0.04%)</title><rect x="99.7155%" y="421" width="0.0431%" height="15" fill="rgb(206,74,20)" fg:x="80973" fg:w="35"/><text x="99.9655%" y="431.50"></text></g><g><title>cipher-solver-comp3260`&lt;eframe::native::glow_integration::GlowWinitApp as eframe::native::winit_integration::WinitApp&gt;::run_ui_and_paint (80,808 samples, 99.51%)</title><rect x="0.2475%" y="501" width="99.5123%" height="15" fill="rgb(230,138,44)" fg:x="201" fg:w="80808"/><text x="0.4975%" y="511.50">cipher-solver-comp3260`&lt;eframe::native::glow_integration::GlowWinitApp as eframe::native::winit_integration::WinitApp&gt;::run_ui_and_paint</text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::observer::control_flow_end_handler (80,811 samples, 99.52%)</title><rect x="0.2475%" y="597" width="99.5160%" height="15" fill="rgb(235,182,43)" fg:x="201" fg:w="80811"/><text x="0.4975%" y="607.50">cipher-solver-comp3260`winit::platform_impl::macos::observer::control_flow_end_handler</text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::app_state::ApplicationDelegate::cleared (80,811 samples, 99.52%)</title><rect x="0.2475%" y="581" width="99.5160%" height="15" fill="rgb(242,16,51)" fg:x="201" fg:w="80811"/><text x="0.4975%" y="591.50">cipher-solver-comp3260`winit::platform_impl::macos::app_state::ApplicationDelegate::cleared</text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::event_handler::EventHandler::handle_event (80,811 samples, 99.52%)</title><rect x="0.2475%" y="565" width="99.5160%" height="15" fill="rgb(248,9,4)" fg:x="201" fg:w="80811"/><text x="0.4975%" y="575.50">cipher-solver-comp3260`winit::platform_impl::macos::event_handler::EventHandler::handle_event</text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::event_loop::map_user_event::_{{closure}} (80,811 samples, 99.52%)</title><rect x="0.2475%" y="549" width="99.5160%" height="15" fill="rgb(210,31,22)" fg:x="201" fg:w="80811"/><text x="0.4975%" y="559.50">cipher-solver-comp3260`winit::platform_impl::macos::event_loop::map_user_event::_{{closure}}</text></g><g><title>cipher-solver-comp3260`winit::event_loop::EventLoop&lt;T&gt;::run_app::_{{closure}} (80,811 samples, 99.52%)</title><rect x="0.2475%" y="533" width="99.5160%" height="15" fill="rgb(239,54,39)" fg:x="201" fg:w="80811"/><text x="0.4975%" y="543.50">cipher-solver-comp3260`winit::event_loop::EventLoop&lt;T&gt;::run_app::_{{closure}}</text></g><g><title>cipher-solver-comp3260`eframe::native::event_loop_context::with_event_loop_context (80,811 samples, 99.52%)</title><rect x="0.2475%" y="517" width="99.5160%" height="15" fill="rgb(230,99,41)" fg:x="201" fg:w="80811"/><text x="0.4975%" y="527.50">cipher-solver-comp3260`eframe::native::event_loop_context::with_event_loop_context</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (80,882 samples, 99.60%)</title><rect x="0.1626%" y="613" width="99.6035%" height="15" fill="rgb(253,106,12)" fg:x="132" fg:w="80882"/><text x="0.4126%" y="623.50">CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__</text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (80,885 samples, 99.61%)</title><rect x="0.1601%" y="629" width="99.6072%" height="15" fill="rgb(213,46,41)" fg:x="130" fg:w="80885"/><text x="0.4101%" y="639.50">CoreFoundation`__CFRunLoopDoObservers</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (80,924 samples, 99.66%)</title><rect x="0.1244%" y="661" width="99.6552%" height="15" fill="rgb(215,133,35)" fg:x="101" fg:w="80924"/><text x="0.3744%" y="671.50">CoreFoundation`CFRunLoopRunSpecific</text></g><g><title>CoreFoundation`__CFRunLoopRun (80,901 samples, 99.63%)</title><rect x="0.1527%" y="645" width="99.6269%" height="15" fill="rgb(213,28,5)" fg:x="124" fg:w="80901"/><text x="0.4027%" y="655.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (80,929 samples, 99.66%)</title><rect x="0.1244%" y="677" width="99.6613%" height="15" fill="rgb(215,77,49)" fg:x="101" fg:w="80929"/><text x="0.3744%" y="687.50">HIToolbox`RunCurrentEventLoopInMode</text></g><g><title>AppKit`_DPSNextEvent (80,982 samples, 99.73%)</title><rect x="0.0677%" y="725" width="99.7266%" height="15" fill="rgb(248,100,22)" fg:x="55" fg:w="80982"/><text x="0.3177%" y="735.50">AppKit`_DPSNextEvent</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (80,937 samples, 99.67%)</title><rect x="0.1231%" y="709" width="99.6712%" height="15" fill="rgb(208,67,9)" fg:x="100" fg:w="80937"/><text x="0.3731%" y="719.50">HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter</text></g><g><title>HIToolbox`ReceiveNextEventCommon (80,937 samples, 99.67%)</title><rect x="0.1231%" y="693" width="99.6712%" height="15" fill="rgb(219,133,21)" fg:x="100" fg:w="80937"/><text x="0.3731%" y="703.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (80,992 samples, 99.74%)</title><rect x="0.0628%" y="741" width="99.7389%" height="15" fill="rgb(246,46,29)" fg:x="51" fg:w="80992"/><text x="0.3128%" y="751.50">AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]</text></g><g><title>AppKit`-[NSApplication run] (81,031 samples, 99.79%)</title><rect x="0.0172%" y="757" width="99.7870%" height="15" fill="rgb(246,185,52)" fg:x="14" fg:w="81031"/><text x="0.2672%" y="767.50">AppKit`-[NSApplication run]</text></g><g><title>cipher-solver-comp3260`main (81,051 samples, 99.81%)</title><rect x="0.0012%" y="869" width="99.8116%" height="15" fill="rgb(252,136,11)" fg:x="1" fg:w="81051"/><text x="0.2512%" y="879.50">cipher-solver-comp3260`main</text></g><g><title>cipher-solver-comp3260`std::rt::lang_start_internal (81,051 samples, 99.81%)</title><rect x="0.0012%" y="853" width="99.8116%" height="15" fill="rgb(219,138,53)" fg:x="1" fg:w="81051"/><text x="0.2512%" y="863.50">cipher-solver-comp3260`std::rt::lang_start_internal</text></g><g><title>cipher-solver-comp3260`std::rt::lang_start::_{{closure}} (81,051 samples, 99.81%)</title><rect x="0.0012%" y="837" width="99.8116%" height="15" fill="rgb(211,51,23)" fg:x="1" fg:w="81051"/><text x="0.2512%" y="847.50">cipher-solver-comp3260`std::rt::lang_start::_{{closure}}</text></g><g><title>cipher-solver-comp3260`std::sys::backtrace::__rust_begin_short_backtrace (81,051 samples, 99.81%)</title><rect x="0.0012%" y="821" width="99.8116%" height="15" fill="rgb(247,221,28)" fg:x="1" fg:w="81051"/><text x="0.2512%" y="831.50">cipher-solver-comp3260`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>cipher-solver-comp3260`cipher_solver_comp3260::main (81,051 samples, 99.81%)</title><rect x="0.0012%" y="805" width="99.8116%" height="15" fill="rgb(251,222,45)" fg:x="1" fg:w="81051"/><text x="0.2512%" y="815.50">cipher-solver-comp3260`cipher_solver_comp3260::main</text></g><g><title>cipher-solver-comp3260`eframe::run_native (81,051 samples, 99.81%)</title><rect x="0.0012%" y="789" width="99.8116%" height="15" fill="rgb(217,162,53)" fg:x="1" fg:w="81051"/><text x="0.2512%" y="799.50">cipher-solver-comp3260`eframe::run_native</text></g><g><title>cipher-solver-comp3260`winit::platform_impl::macos::event_loop::EventLoop&lt;T&gt;::run_on_demand (81,038 samples, 99.80%)</title><rect x="0.0172%" y="773" width="99.7956%" height="15" fill="rgb(229,93,14)" fg:x="14" fg:w="81038"/><text x="0.2672%" y="783.50">cipher-solver-comp3260`winit::platform_impl::macos::event_loop::EventLoop&lt;T&gt;::run_on_demand</text></g><g><title>dyld`start (81,054 samples, 99.82%)</title><rect x="0.0012%" y="885" width="99.8153%" height="15" fill="rgb(209,67,49)" fg:x="1" fg:w="81054"/><text x="0.2512%" y="895.50">dyld`start</text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (39 samples, 0.05%)</title><rect x="99.8239%" y="869" width="0.0480%" height="15" fill="rgb(213,87,29)" fg:x="81061" fg:w="39"/><text x="100.0739%" y="879.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (9 samples, 0.01%)</title><rect x="99.8744%" y="821" width="0.0111%" height="15" fill="rgb(205,151,52)" fg:x="81102" fg:w="9"/><text x="100.1244%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (9 samples, 0.01%)</title><rect x="99.8744%" y="805" width="0.0111%" height="15" fill="rgb(253,215,39)" fg:x="81102" fg:w="9"/><text x="100.1244%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_worker_thread2 (10 samples, 0.01%)</title><rect x="99.8744%" y="853" width="0.0123%" height="15" fill="rgb(221,220,41)" fg:x="81102" fg:w="10"/><text x="100.1244%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain (10 samples, 0.01%)</title><rect x="99.8744%" y="837" width="0.0123%" height="15" fill="rgb(218,133,21)" fg:x="81102" fg:w="10"/><text x="100.1244%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (9 samples, 0.01%)</title><rect x="99.8867%" y="789" width="0.0111%" height="15" fill="rgb(221,193,43)" fg:x="81112" fg:w="9"/><text x="100.1367%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (10 samples, 0.01%)</title><rect x="99.8978%" y="789" width="0.0123%" height="15" fill="rgb(240,128,52)" fg:x="81121" fg:w="10"/><text x="100.1478%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (10 samples, 0.01%)</title><rect x="99.8978%" y="773" width="0.0123%" height="15" fill="rgb(253,114,12)" fg:x="81121" fg:w="10"/><text x="100.1478%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (10 samples, 0.01%)</title><rect x="99.8978%" y="757" width="0.0123%" height="15" fill="rgb(215,223,47)" fg:x="81121" fg:w="10"/><text x="100.1478%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (10 samples, 0.01%)</title><rect x="99.8978%" y="741" width="0.0123%" height="15" fill="rgb(248,225,23)" fg:x="81121" fg:w="10"/><text x="100.1478%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (10 samples, 0.01%)</title><rect x="99.8978%" y="725" width="0.0123%" height="15" fill="rgb(250,108,0)" fg:x="81121" fg:w="10"/><text x="100.1478%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (10 samples, 0.01%)</title><rect x="99.8978%" y="709" width="0.0123%" height="15" fill="rgb(228,208,7)" fg:x="81121" fg:w="10"/><text x="100.1478%" y="719.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (9 samples, 0.01%)</title><rect x="99.8990%" y="693" width="0.0111%" height="15" fill="rgb(244,45,10)" fg:x="81122" fg:w="9"/><text x="100.1490%" y="703.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (9 samples, 0.01%)</title><rect x="99.8990%" y="677" width="0.0111%" height="15" fill="rgb(207,125,25)" fg:x="81122" fg:w="9"/><text x="100.1490%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (36 samples, 0.04%)</title><rect x="99.8867%" y="805" width="0.0443%" height="15" fill="rgb(210,195,18)" fg:x="81112" fg:w="36"/><text x="100.1367%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (9 samples, 0.01%)</title><rect x="99.9200%" y="789" width="0.0111%" height="15" fill="rgb(249,80,12)" fg:x="81139" fg:w="9"/><text x="100.1700%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain_deferred_wlh (37 samples, 0.05%)</title><rect x="99.8867%" y="837" width="0.0456%" height="15" fill="rgb(221,65,9)" fg:x="81112" fg:w="37"/><text x="100.1367%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (37 samples, 0.05%)</title><rect x="99.8867%" y="821" width="0.0456%" height="15" fill="rgb(235,49,36)" fg:x="81112" fg:w="37"/><text x="100.1367%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (38 samples, 0.05%)</title><rect x="99.8867%" y="853" width="0.0468%" height="15" fill="rgb(225,32,20)" fg:x="81112" fg:w="38"/><text x="100.1367%" y="863.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (93 samples, 0.11%)</title><rect x="99.8202%" y="885" width="0.1145%" height="15" fill="rgb(215,141,46)" fg:x="81058" fg:w="93"/><text x="100.0702%" y="895.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (51 samples, 0.06%)</title><rect x="99.8719%" y="869" width="0.0628%" height="15" fill="rgb(250,160,47)" fg:x="81100" fg:w="51"/><text x="100.1219%" y="879.50"></text></g><g><title>SkyLight`event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (10 samples, 0.01%)</title><rect x="99.9544%" y="677" width="0.0123%" height="15" fill="rgb(216,222,40)" fg:x="81167" fg:w="10"/><text x="100.2044%" y="687.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (9 samples, 0.01%)</title><rect x="99.9557%" y="661" width="0.0111%" height="15" fill="rgb(234,217,39)" fg:x="81168" fg:w="9"/><text x="100.2057%" y="671.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (30 samples, 0.04%)</title><rect x="99.9495%" y="693" width="0.0369%" height="15" fill="rgb(207,178,40)" fg:x="81163" fg:w="30"/><text x="100.1995%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (15 samples, 0.02%)</title><rect x="99.9680%" y="677" width="0.0185%" height="15" fill="rgb(221,136,13)" fg:x="81178" fg:w="15"/><text x="100.2180%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (15 samples, 0.02%)</title><rect x="99.9680%" y="661" width="0.0185%" height="15" fill="rgb(249,199,10)" fg:x="81178" fg:w="15"/><text x="100.2180%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (15 samples, 0.02%)</title><rect x="99.9680%" y="645" width="0.0185%" height="15" fill="rgb(249,222,13)" fg:x="81178" fg:w="15"/><text x="100.2180%" y="655.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (38 samples, 0.05%)</title><rect x="99.9409%" y="757" width="0.0468%" height="15" fill="rgb(244,185,38)" fg:x="81156" fg:w="38"/><text x="100.1909%" y="767.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (38 samples, 0.05%)</title><rect x="99.9409%" y="741" width="0.0468%" height="15" fill="rgb(236,202,9)" fg:x="81156" fg:w="38"/><text x="100.1909%" y="751.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (33 samples, 0.04%)</title><rect x="99.9470%" y="725" width="0.0406%" height="15" fill="rgb(250,229,37)" fg:x="81161" fg:w="33"/><text x="100.1970%" y="735.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (33 samples, 0.04%)</title><rect x="99.9470%" y="709" width="0.0406%" height="15" fill="rgb(206,174,23)" fg:x="81161" fg:w="33"/><text x="100.1970%" y="719.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (44 samples, 0.05%)</title><rect x="99.9360%" y="789" width="0.0542%" height="15" fill="rgb(211,33,43)" fg:x="81152" fg:w="44"/><text x="100.1860%" y="799.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (43 samples, 0.05%)</title><rect x="99.9372%" y="773" width="0.0530%" height="15" fill="rgb(245,58,50)" fg:x="81153" fg:w="43"/><text x="100.1872%" y="783.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (45 samples, 0.06%)</title><rect x="99.9360%" y="805" width="0.0554%" height="15" fill="rgb(244,68,36)" fg:x="81152" fg:w="45"/><text x="100.1860%" y="815.50"></text></g><g><title>all (81,204 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(232,229,15)" fg:x="0" fg:w="81204"/><text x="0.2500%" y="911.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (53 samples, 0.07%)</title><rect x="99.9347%" y="885" width="0.0653%" height="15" fill="rgb(254,30,23)" fg:x="81151" fg:w="53"/><text x="100.1847%" y="895.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (53 samples, 0.07%)</title><rect x="99.9347%" y="869" width="0.0653%" height="15" fill="rgb(235,160,14)" fg:x="81151" fg:w="53"/><text x="100.1847%" y="879.50"></text></g><g><title>AppKit`_NSEventThread (53 samples, 0.07%)</title><rect x="99.9347%" y="853" width="0.0653%" height="15" fill="rgb(212,155,44)" fg:x="81151" fg:w="53"/><text x="100.1847%" y="863.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (52 samples, 0.06%)</title><rect x="99.9360%" y="837" width="0.0640%" height="15" fill="rgb(226,2,50)" fg:x="81152" fg:w="52"/><text x="100.1860%" y="847.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (52 samples, 0.06%)</title><rect x="99.9360%" y="821" width="0.0640%" height="15" fill="rgb(234,177,6)" fg:x="81152" fg:w="52"/><text x="100.1860%" y="831.50"></text></g></svg></svg>